package socialmedia;

public class Post {

    private static int lastId = 999;
    private int postId;
    private Account account;
    private String handle;
    private String message;
    private String[] endorsements;
    private String[] comments;

    /**
     * creates post with a handle and message
     * @param handle
     * @param message
     */
    public Post(String handle, String message){
        this.postId = ++Post.lastId;
        setHandle(handle);
        setMessage(message);
    }

    /**
     *
     * @return post in string format
     */
    public String toString() {
        return "ID: " + postId +"/nAccount: " + handle + "/n " + message;
    }

    /** check whether the message string is valid, i.e. not null, blank, or less than or equal to 100 characters
     *
     * @param str
     * @return true if the message is valid, false if not
     */
    private boolean isValidMessage(String str) {
        if (str != null && !str.isBlank() && str.length() <= 100) {
            return true;
        } else {
            System.err.printf("%s - is an invalid message.%n", str);
            return false;
        }
    }

    /** check whether the handle string is valid, i.e. not null, blank, or more than 30 characters.
     *
     * @param str
     * @return true if the handle is valid, false if not
     */
    private boolean isValidHandle(String str) {
        if (str != null && !str.isBlank() || str.length() <= 30 || !str.contains(" ")) {
            return true;
        } else {
            System.err.printf("%s - is not a valid string to use", str);
            return false;
        }
    }
    
    // setter methods

    /** set account associated with post
     *
     * @param account to set
     */
    public void setAccount(Account account) {
        this.account = account;
    }


    /** set account handle associated with post
     *
     * @param handle to set
     * @return handle
     */
    public String setHandle(String handle) {
        if (isValidHandle(handle)) {
            this.handle = handle;
        } else {
            System.exit(1);
        }
        return handle;
    }

    /** set a post message if it is a valid string
     *
     * @param message to set
     */
    public String setMessage(String message) {
        if (isValidMessage(message)){
            this.message = message;
        } else {
            System.exit(1);
        }
        return message;
    }

    /**
     * set post ID number
     * @param postId to set
     */
    public int setPostId(int postId) {
        this.postId = postId;
        return postId;
    }

    // getter methods

    /**
     *
     * @return post ID
     */
    public int getId() {
        return postId;
    }


    /**
     *
     * @return account
     */
    public Account getAccount() {
        return account;
    }

    /**
     * 
     * @return handle
     */
    public String getHandle(){
        return handle;
    }
    /**
     *
     * @return message
     */
    public String getMessage() {
        return message;
    }
}
