public class Account {

    private static int lastId = 999;
    private int id;
    private String handle;
    private String descriptionField;

    /**
     * creates account with a handle
     * @param handle
     */
    public Account(String handle) {
        this.id = ++Account.lastId;
        setHandle(handle);
    }

    /** creates account with all information, i.e. id, handle and description field
     *
     * @param handle
     * @param descriptionField
     */
    public Account(String handle, String descriptionField){
        ++Account.lastId;
        this.handle = handle;
        setDescriptionField(descriptionField);
    }

    /** check whether the String is valid, i.e. not null or blank, fewer than 30 characters and contains no blank spaces
     *
     * @param str
     * @return true if the String is valid, false if not
     */
   private boolean isValidString(String str) {
       if (str != null && !str.isBlank() || str.length() < 30 || !str.contains(" ")) {
           return true;
       } else {
           System.err.printf("%s - is not a valid string to use", str);
           return false;
       }
   }
    // setters

    /** set a handle if it is valid
     *
     * @param handle to set
     */
    public void setHandle(String handle) {
        if (isValidString(handle)) {
            this.handle = handle;
        } else {
            System.exit(1);
        }
    }

    public void setDescriptionField(String descriptionField){
        this.descriptionField = descriptionField;
    }

    //getters

    /**
     *
     * @return ID
     */
    public int getId() {
        return this.id;
    }

    /**
     *
     * @return handle
     */
    public String getHandle() {
        return this.handle;
    }

    /**
     *
     * @return description field
     */
    public String getDescriptionField() {
        return this.descriptionField;
    }

}



// account related methods
// create account, remove account, change account handle, update account description, show account, get number of accounts, bet most endorsed account
